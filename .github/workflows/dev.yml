name: Build checker

on:
  push:
    branches: [ dev ]

env:
  BUILD_TYPE: Debug

jobs:
  build_all:
    name: Build Checker
    strategy:
      matrix:
        vars:
          - { os: 'ubuntu-latest', version: 'Linux', zip: 'r-type--Linux.tar.gz' }
#          - { os: 'macos-latest', version: 'Mac', zip: 'r-type--Darwin.tar.gz' }
          - { os: 'windows-latest', version: 'Windows', zip: 'r-type--win64.tar.gz' }

    runs-on: ${{ matrix.vars.os }}
    steps:
      - name: Dependencies
        if: ${{ matrix.vars.os == 'ubuntu-latest' }}
        run: |
          sudo apt-get update -y
          sudo apt-get upgrade -y
          sudo apt-get install libxrandr-dev libxcursor-dev libudev-dev libopenal-dev libflac-dev libvorbis-dev libgl1-mesa-dev libegl1-mesa-dev libdrm-dev libgbm-dev

      - name: Get latest CMake and Ninja
        uses: lukka/get-cmake@latest

      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Build
        run: |
          cmake -B build -DCMAKE_BUILD_TYPE=Release
          cmake --build build --config Release

      - name: Package code for ${{ matrix.vars.version }}
        if: ${{ matrix.vars.os == 'ubuntu-latest' }}
        run: |
          cd build/
          sudo cpack -G TGZ

      - name: Package code for ${{ matrix.vars.version }}
        if: ${{ matrix.vars.os != 'ubuntu-latest' }}
        run: |
          cd build/
          cpack -G TGZ
